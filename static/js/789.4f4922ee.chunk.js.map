{"version":3,"file":"static/js/789.4f4922ee.chunk.js","mappings":"ySAKMA,E,QAAgBC,EAAAA,OAAa,CACjCC,QAHY,+BAIZC,OAAQ,CACNC,QANY,sCAWHC,EAAmB,mCAAG,6GAERL,EAAcM,IAAd,kBAFQ,cAEzBC,EAFyB,yBAGxBA,EAASC,MAHe,oGAAH,qDAUnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEDV,EAAcM,IAAd,gBAAmC,CACxDH,OAAQ,CACNQ,MAAOD,KAJa,cAElBH,EAFkB,yBAOjBA,EAASC,MAPQ,oGAAH,sDAcZI,EAAe,mCAAG,WAAOC,GAAP,gGAEJb,EAAcM,IAAd,iBAA4BO,IAFxB,cAErBN,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,sDAUfM,EAAY,mCAAG,WAAOC,GAAP,gGAEDf,EAAcM,IAAd,iBAA4BS,EAA5B,aAFC,cAElBR,EAFkB,yBAGjBA,EAASC,MAHQ,oGAAH,sDAWZQ,EAAe,mCAAG,WAAOC,GAAP,gGAEJjB,EAAcM,IAAd,iBAA4BW,EAA5B,aAFI,cAErBV,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,qD,gHCX5B,UA1CA,WACE,IAAQK,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAAwBM,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KAgBA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BP,EAAAA,EAAAA,IAAaD,GAFxC,OAEUN,EAFV,OAGIa,EAAQb,EAASQ,MAHrB,gDAKIO,QAAQC,MAAM,oCAAd,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACX,KAGF,4BACE,8CACA,eAAIY,UAAU,kBAAd,SACGV,EAAKW,KAAI,SAACC,GAAD,OACR,gBAAIF,UAAU,aAAd,WACA,gBACIG,IAAKD,EAAME,aAAN,0DAAwEF,EAAME,cArB5E,8EAsBPC,IAAKH,EAAMI,KACXC,MAAO,CAAEC,SAAU,YAErB,wBAAG,uBAAIN,EAAMI,SACZJ,EAAMO,YAAa,+BAAOP,EAAMO,eAPHP,EAAMQ,GAD9B,QAcjB,C","sources":["components/API.js","components/pages/Cast.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a4b9e4760b7564e10a80d0c72f50665'; \nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// Function to fetch trending movies\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(`/movie/popular`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to search for movies by keyword\nexport const searchMovies = async (keyword) => {\n  try {\n    const response = await axiosInstance.get(`/search/movie`, {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get full movie details\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get cast information for a movie\nexport const getMovieCast = async (cast) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${cast}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Function to get movie reviews\nexport const getMovieReviews = async (reviews) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${reviews}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; \nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from '../API';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  useEffect(() => {\n    async function fetchMovieCast() {\n      try {\n        const response = await getMovieCast(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error('Error fetching cast information: ', error);\n      }\n    }\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast Information</h2>\n      <ul className=\"actor-list list\">\n        {cast.map((actor) => (\n          <li className=\"actor-item\" key={actor.id}> \n          <img\n              src={actor.profile_path ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${actor.profile_path}` : defaultImg}\n              alt={actor.name}\n              style={{ maxWidth: '250px' }}\n            />\n            <p><b>{actor.name}</b></p>\n            {actor.character && <p>as {actor.character}</p>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.array, \n};\n\nexport default Cast;"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","get","response","data","searchMovies","keyword","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","reviews","useParams","useState","setCast","useEffect","console","error","fetchMovieCast","className","map","actor","src","profile_path","alt","name","style","maxWidth","character","id"],"sourceRoot":""}