{"version":3,"file":"static/js/129.8bb2b53b.chunk.js","mappings":"ySAKMA,E,QAAgBC,EAAAA,OAAa,CACjCC,QAHY,+BAIZC,OAAQ,CACNC,QANY,sCAWHC,EAAmB,mCAAG,6GAERL,EAAcM,IAAd,kBAFQ,cAEzBC,EAFyB,yBAGxBA,EAASC,MAHe,oGAAH,qDAUnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEDV,EAAcM,IAAd,gBAAmC,CACxDH,OAAQ,CACNQ,MAAOD,KAJa,cAElBH,EAFkB,yBAOjBA,EAASC,MAPQ,oGAAH,sDAcZI,EAAe,mCAAG,WAAOC,GAAP,gGAEJb,EAAcM,IAAd,iBAA4BO,IAFxB,cAErBN,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,sDAUfM,EAAY,mCAAG,WAAOC,GAAP,gGAEDf,EAAcM,IAAd,iBAA4BS,EAA5B,aAFC,cAElBR,EAFkB,yBAGjBA,EAASC,MAHQ,oGAAH,sDAWZQ,EAAe,mCAAG,WAAOC,GAAP,gGAEJjB,EAAcM,IAAd,iBAA4BW,EAA5B,aAFI,cAErBV,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,qD,gHCjB5B,UApCA,WACE,IAAQK,GAAYK,EAAAA,EAAAA,MAAZL,QACR,GAA8BM,EAAAA,EAAAA,UAAS,IAAvC,eAAOF,EAAP,KAAgBG,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BL,EAAAA,EAAAA,IAAgBH,GAF3C,OAEUN,EAFV,OAGIa,EAAWb,EAASe,SAHxB,gDAKIC,QAAQC,MAAM,2BAAd,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACZ,KAGF,4BACE,2CACA,eAAIa,UAAU,OAAd,SACGT,EAAQU,KAAI,SAACC,GAAD,OACX,2BACE,0BAAG,oCAAgBA,EAAOC,WAC1B,uBAAID,EAAOE,YAFJF,EAAOG,GADL,MAOK,IAAnBd,EAAQe,SAAgB,uEAG9B,C","sources":["components/API.js","components/pages/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a4b9e4760b7564e10a80d0c72f50665'; \nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// Function to fetch trending movies\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(`/movie/popular`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to search for movies by keyword\nexport const searchMovies = async (keyword) => {\n  try {\n    const response = await axiosInstance.get(`/search/movie`, {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get full movie details\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get cast information for a movie\nexport const getMovieCast = async (cast) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${cast}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Function to get movie reviews\nexport const getMovieReviews = async (reviews) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${reviews}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../API';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error('Error fetching reviews: ', error);\n      }\n    }\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Movie Reviews</h1>\n      <ul className=\"list\">\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <p><b>Author: </b>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n      {reviews.length === 0 && <p>We don't have any reviews for this movie.</p>}\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.array,\n};\n\nexport default Reviews;\n"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","get","response","data","searchMovies","keyword","query","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","reviews","useParams","useState","setReviews","useEffect","results","console","error","fetchMovieReviews","className","map","review","author","content","id","length"],"sourceRoot":""}