{"version":3,"file":"static/js/129.23cd57e5.chunk.js","mappings":"sSAKMA,E,OAAgBC,EAAAA,OAAa,CACjCC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAWHC,EAAmB,mCAAG,6GAERL,EAAcM,IAAI,8CAFV,cAEzBC,EAFyB,yBAGxBA,EAASC,MAHe,oGAAH,qDAUnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEDV,EAAcM,IAAI,4CAA6C,CACpFH,OAAQ,CACNQ,MAAOD,KAJa,cAElBH,EAFkB,yBAOjBA,EAASC,MAPQ,oGAAH,sDAcZI,EAAe,mCAAG,WAAOC,GAAP,gGAEJb,EAAcM,IAAd,gDAFI,cAErBC,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,sDAUfM,EAAY,mCAAG,WAAOD,GAAP,gGAEDb,EAAcM,IAAd,wDAFC,cAElBC,EAFkB,yBAGjBA,EAASC,MAHQ,oGAAH,sDAUZO,EAAe,mCAAG,WAAOF,GAAP,gGAEJb,EAAcM,IAAd,wDAFI,cAErBC,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,qD,gGCtB5B,UA/BA,YAA6B,IAAVQ,EAAS,EAATA,MACjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BL,EAAAA,EAAAA,IAAgBC,EAAMb,OAAOU,SAFxD,OAEUN,EAFV,OAGIY,EAAWZ,EAASc,SAHxB,gDAKIC,QAAQC,MAAM,2BAAd,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACR,EAAMb,OAAOU,WAGf,4BACE,2CACA,wBACGK,EAAQO,KAAI,SAACC,GAAD,OACX,wBAAqBA,EAAOC,SAAnBD,EAAOE,GADL,QAMpB,C","sources":["components/API.js","components/pages/Reviews.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a4b9e4760b7564e10a80d0c72f50665'; \nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// Function to fetch trending movies\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get('https://api.themoviedb.org/3/movie/popular');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to search for movies by keyword\nexport const searchMovies = async (keyword) => {\n  try {\n    const response = await axiosInstance.get('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get full movie details\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`https://api.themoviedb.org/3/movie/{movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get cast information for a movie\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`https://api.themoviedb.org/3/movie/{movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get movie reviews\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`https://api.themoviedb.org/3/movie/{movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { getMovieReviews } from '../API';\n\nfunction Reviews({ match }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovieReviews() {\n      try {\n        const response = await getMovieReviews(match.params.movieId);\n        setReviews(response.results); \n      } catch (error) {\n        console.error('Error fetching reviews: ', error);\n      }\n    }\n    fetchMovieReviews();\n  }, [match.params.movieId]);\n\n  return (\n    <div>\n      <h1>Movie Reviews</h1>\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>{review.content}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nReviews.propTypes = {\n  match: PropTypes.object.isRequired,\n};\n\nexport default Reviews;"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","get","response","data","searchMovies","keyword","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","match","useState","reviews","setReviews","useEffect","results","console","error","fetchMovieReviews","map","review","content","id"],"sourceRoot":""}