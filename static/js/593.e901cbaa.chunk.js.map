{"version":3,"file":"static/js/593.e901cbaa.chunk.js","mappings":"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","sources":["components/API.js","components/pages/Home.js","components/pages/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a4b9e4760b7564e10a80d0c72f50665'; \nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// Function to fetch trending movies\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(`/movie/popular`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to search for movies by keyword\nexport const searchMovies = async (keyword) => {\n  try {\n    const response = await axiosInstance.get(`/search/movie`, {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get full movie details\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get cast information for a movie\nexport const getMovieCast = async (cast) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${cast}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Function to get movie reviews\nexport const getMovieReviews = async (reviews) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${reviews}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { fetchTrendingMovies } from '../API';\nimport MoviesList from './MoviesList';\n\nfunction Home() {\n  const { data: trendingMovies, isLoading, isError } = useQuery('trendingMovies', fetchTrendingMovies);\n  const location = useLocation();\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error loading trending movies.</div>;\n  }\n\n  return (\n    <div>\n      <h1>Popular Movies</h1>\n      <ul className=\"movies-list\">\n        {trendingMovies.results\n          .sort((a, b) => b.vote_average - a.vote_average) // Sort movies by vote_average in descending order\n          .map((movie) => (\n            <MoviesList key={movie.id} movie={movie} location={location.pathname} /> \n          ))}\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n\nHome.propTypes = {\n  trendingMovies: PropTypes.object,\n};\n\nexport default Home;","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movie }) => {\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const location = useLocation();\n\n  return (\n    <li className=\"movie-item\">\n      <Link to={`movies/${movie.id}`} state={{ from: location.pathname }}>\n        <img\n          src={movie.poster_path ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}` : defaultImg}\n          alt={movie.title}\n          className=\"movie-poster\"\n          style={{ maxWidth: '250px' }}\n        />\n        <p className=\"movie-title\">{movie.title}</p>\n      </Link>\n    </li>\n  );\n};\n\nexport default MoviesList;\n"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","t0","stop","apply","arguments","searchMovies","_ref2","_callee2","keyword","_context2","query","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x2","getMovieCast","_ref4","_callee4","cast","_context4","_x3","getMovieReviews","_ref5","_callee5","reviews","_context5","_x4","_useQuery","useQuery","trendingMovies","isLoading","isError","location","useLocation","_jsx","children","_jsxs","className","results","sort","a","b","vote_average","map","movie","MoviesList","pathname","id","Outlet","Link","to","state","from","src","poster_path","alt","title","style","maxWidth"],"sourceRoot":""}