{"version":3,"file":"static/js/489.dc16cfe7.chunk.js","mappings":"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","sources":["components/API.js","components/pages/Movies.js","components/pages/MoviesList.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a4b9e4760b7564e10a80d0c72f50665'; \nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// Function to fetch trending movies\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get(`/movie/popular`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to search for movies by keyword\nexport const searchMovies = async (keyword) => {\n  try {\n    const response = await axiosInstance.get(`/search/movie`, {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get full movie details\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get cast information for a movie\nexport const getMovieCast = async (cast) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${cast}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n\n// Function to get movie reviews\nexport const getMovieReviews = async (reviews) => {\n  try {\n    const response = await axiosInstance.get(`/movie/${reviews}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { searchMovies } from '../API';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport MoviesList from './MoviesList';\n\nfunction Movies({ setSearchResults }) {\n  const [keyword, setKeyword] = useState('');\n  const [searchResultsData, setSearchResultsData] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const storedSearchResults = JSON.parse(localStorage.getItem('searchResults'));\n    if (storedSearchResults) {\n      setSearchResultsData(storedSearchResults);\n      setSearchResults(storedSearchResults);\n    } else {\n      setSearchResultsData([]);\n      setSearchResults([]);\n    }\n  }, [setSearchResults]);\n\n  const handleSearch = async () => {\n    try {\n      const response = await searchMovies(keyword);\n\n      localStorage.setItem('searchResults', JSON.stringify(response.results));\n\n      setSearchResultsData(response.results);\n      setSearchResults(response.results);\n    } catch (error) {\n      console.error('Error searching movies: ', error);\n    }\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={keyword}\n        onChange={(e) => setKeyword(e.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      {searchResultsData.length > 0 ? (\n        <div>\n          <h2>Results</h2>\n          <ul className=\"movies-list\">\n            {searchResultsData.map((movie) => (\n              <MoviesList key={movie.id} movie={movie} location={location.pathname} /> \n            ))}\n          </ul>\n          <Outlet />\n        </div>\n      ) : (\n        <p>No results were found</p>\n      )}\n    </div>\n  );\n}\n\nMovies.propTypes = {\n  setSearchResults: PropTypes.func.isRequired,\n};\n\nexport default Movies;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movie }) => {\n  const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n  const location = useLocation();\n\n  return (\n    <li className=\"movie-item\">\n      <Link to={`movies/${movie.id}`} state={{ from: location.pathname }}>\n        <img\n          src={movie.poster_path ? `https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}` : defaultImg}\n          alt={movie.title}\n          className=\"movie-poster\"\n          style={{ maxWidth: '250px' }}\n        />\n        <p className=\"movie-title\">{movie.title}</p>\n      </Link>\n    </li>\n  );\n};\n\nexport default MoviesList;\n"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","get","sent","abrupt","data","t0","stop","apply","arguments","searchMovies","_ref2","_callee2","keyword","_context2","query","_x","getMovieDetails","_ref3","_callee3","movieId","_context3","concat","_x2","getMovieCast","_ref4","_callee4","cast","_context4","_x3","getMovieReviews","_ref5","_callee5","reviews","_context5","_x4","setSearchResults","_useState","useState","_useState2","_slicedToArray","setKeyword","_useState3","_useState4","searchResultsData","setSearchResultsData","location","useLocation","useEffect","storedSearchResults","JSON","parse","localStorage","getItem","handleSearch","setItem","stringify","results","console","error","_jsxs","children","_jsx","type","value","onChange","e","target","onKeyDown","key","onClick","length","className","map","movie","MoviesList","pathname","id","Outlet","Link","to","state","from","src","poster_path","alt","title","style","maxWidth"],"sourceRoot":""}