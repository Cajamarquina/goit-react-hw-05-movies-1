{"version":3,"file":"static/js/593.38c2bdb9.chunk.js","mappings":"sSAKMA,E,OAAgBC,EAAAA,OAAa,CACjCC,QAHe,+BAIfC,OAAQ,CACNC,QANY,sCAWHC,EAAmB,mCAAG,6GAERL,EAAcM,IAAI,8CAFV,cAEzBC,EAFyB,yBAGxBA,EAASC,MAHe,oGAAH,qDAUnBC,EAAY,mCAAG,WAAOC,GAAP,gGAEDV,EAAcM,IAAI,4CAA6C,CACpFH,OAAQ,CACNQ,MAAOD,KAJa,cAElBH,EAFkB,yBAOjBA,EAASC,MAPQ,oGAAH,sDAcZI,EAAe,mCAAG,WAAOC,GAAP,gGAEJb,EAAcM,IAAd,gDAFI,cAErBC,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,sDAUfM,EAAY,mCAAG,WAAOD,GAAP,gGAEDb,EAAcM,IAAd,wDAFC,cAElBC,EAFkB,yBAGjBA,EAASC,MAHQ,oGAAH,sDAUZO,EAAe,mCAAG,WAAOF,GAAP,gGAEJb,EAAcM,IAAd,wDAFI,cAErBC,EAFqB,yBAGpBA,EAASC,MAHW,oGAAH,qD,iHCR5B,UA3CA,WACE,OAA4CQ,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE2Bd,EAAAA,EAAAA,MAF3B,OAEUE,EAFV,OAIUa,EAAeb,EAASc,QAAQC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,YAA7B,IAC3CP,EAAkBE,GALtB,gDAOIM,QAAQC,MAAM,mCAAd,MAPJ,0DADc,uBAAC,WAAD,wBAWdC,EACD,GAAE,KAID,4BACE,4CACA,wBACGX,EAAeY,KAAI,SAACC,GAAD,OAClB,yBACA,UAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAA1B,WACE,gBACEC,IAAG,0DAAqDH,EAAMI,aAC9DC,IAAKL,EAAMM,SAEb,uBAAIN,EAAMM,YANHN,EAAME,GADG,OAYtB,SAAC,KAAD,MAGL,C","sources":["components/API.js","components/pages/Home.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a4b9e4760b7564e10a80d0c72f50665'; \nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst axiosInstance = axios.create({\n  baseURL: BASE_URL,\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n// Function to fetch trending movies\nexport const fetchTrendingMovies = async () => {\n  try {\n    const response = await axiosInstance.get('https://api.themoviedb.org/3/movie/popular');\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to search for movies by keyword\nexport const searchMovies = async (keyword) => {\n  try {\n    const response = await axiosInstance.get('https://api.themoviedb.org/3/search/movie', {\n      params: {\n        query: keyword,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get full movie details\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`https://api.themoviedb.org/3/movie/{movieId}`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get cast information for a movie\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`https://api.themoviedb.org/3/movie/{movieId}/credits`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\n// Function to get movie reviews\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axiosInstance.get(`https://api.themoviedb.org/3/movie/{movieId}/reviews`);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchTrendingMovies } from '../API';\nimport { Link, Outlet } from 'react-router-dom';\n\n\nfunction Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchMovies() {\n      try {\n        const response = await fetchTrendingMovies();\n        // Sort movies by user score (vote_average) in descending order\n        const sortedMovies = response.results.sort((a, b) => b.vote_average - a.vote_average);\n        setTrendingMovies(sortedMovies);\n      } catch (error) {\n        console.error('Error fetching trending movies: ', error);\n      }\n    }\n    fetchMovies();\n  }, []);\n\n\n  return (\n    <div>\n      <h1>Popular Movies</h1>\n      <ul>\n        {trendingMovies.map((movie) => (\n          <li key={movie.id}>\n          <Link to={`movies/${movie.id}`}>\n            <img\n              src={`https://image.tmdb.org/t/p/w185_and_h278_bestv2/${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <p>{movie.title}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n      <Outlet /> \n    </div>\n  );\n}\n\nHome.propTypes = {\n  trendingMovies: PropTypes.array.isRequired,\n};\n\nexport default Home;"],"names":["axiosInstance","axios","baseURL","params","api_key","fetchTrendingMovies","get","response","data","searchMovies","keyword","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","useState","trendingMovies","setTrendingMovies","useEffect","sortedMovies","results","sort","a","b","vote_average","console","error","fetchMovies","map","movie","to","id","src","poster_path","alt","title"],"sourceRoot":""}